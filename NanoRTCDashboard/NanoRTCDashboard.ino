/*
  Sketch generated by the Arduino IoT Cloud Thing "Untitled 2"
  https://create.arduino.cc/cloud/things/67c4d7da-289d-4d93-881d-4a0c14fe9019

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  CloudLight green;
  CloudLight red;
  CloudLight yellow;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#define GREEN 2
#define YELLOW 21
#define RED 13
#define LIGHT_ON HIGH
#define LIGHT_OFF LOW

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  pinMode(GREEN, OUTPUT);
  pinMode(YELLOW, OUTPUT);
  pinMode(RED, OUTPUT);

}

void loop() {
  ArduinoCloud.update();
  // Your code here


}

/*
  Since Green is READ_WRITE variable, onGreenChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onGreenChange()  {
  // Add your code here to act upon Green change
  Serial.print("GREEN: ");
  Serial.println(green);
  if (!green) {
    digitalWrite(GREEN, LIGHT_ON);
  } else {
    digitalWrite(GREEN, LIGHT_OFF);
  }
}
/*
  Since Red is READ_WRITE variable, onRedChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onRedChange()  {
  // Add your code here to act upon Red change
  Serial.print("RED: ");
  Serial.println(red);
  if (!red) {
    digitalWrite(RED, LIGHT_ON);
  } else {
    digitalWrite(RED, LIGHT_OFF);
  }
}
/*
  Since Yellow is READ_WRITE variable, onYellowChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onYellowChange()  {
  // Add your code here to act upon Yellow change
  Serial.print("YELLOW: ");
  Serial.println(yellow);
  if (!yellow) {
    digitalWrite(YELLOW, LIGHT_ON);
  } else {
    digitalWrite(YELLOW, LIGHT_OFF);
  }
}
